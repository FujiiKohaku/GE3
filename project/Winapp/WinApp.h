#pragma once
#include <Windows.h>
#include <cstdint>

//==================================================================
//  WinAppクラス
//  Windowsアプリ全体のウィンドウ管理を行うクラス
//==================================================================
class WinApp {

public:
    //==================================================================
    //  初期化処理
    //  ウィンドウの生成と表示を行う
    //==================================================================
    void initialize();

    //==================================================================
    //  終了処理
    //  ウィンドウ破棄とCOM解放を行う
    //==================================================================
    void Finalize();

    //==================================================================
    //  クライアント領域のサイズ（描画領域）
    //==================================================================
    static const int32_t kClientWidth = 1280; // 横幅
    static const int32_t kClientHeight = 720; // 高さ

    //==================================================================
    //  ウィンドウプロシージャ（静的関数）
    //  Windowsからのメッセージを受け取る関数
    //==================================================================
    static LRESULT CALLBACK WindowProc(HWND hwnd, UINT msg, WPARAM wparam, LPARAM lparam);

    //==================================================================
    //  Getter関数
    //==================================================================
    HWND GetHwnd() const { return hwnd_; } // ウィンドウハンドルを取得
    HINSTANCE GetHinstance() const { return wc_.hInstance; } // インスタンスハンドルを取得

    //==================================================================
    //  メッセージ処理
    //  戻り値: true → アプリ終了要求あり
    //==================================================================
    bool ProcessMessage();

private:
    //==================================================================
    //  メンバ変数
    //==================================================================
    HWND hwnd_ = nullptr; // ウィンドウハンドル
    WNDCLASS wc_ {}; // ウィンドウクラス情報
};
